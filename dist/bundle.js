!function(e){var a={};function t(n){if(a[n])return a[n].exports;var r=a[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=a,t.d=function(e,a,n){t.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,a){if(1&a&&(e=t(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var r in e)t.d(n,r,function(a){return e[a]}.bind(null,r));return n},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},t.p="",t(t.s=0)}([function(e,a,t){"use strict";t.r(a);const n=document.querySelector(".body"),r=document.querySelector(".location"),i=document.querySelector(".geolocation__coordinates"),s=document.querySelector(".date-time"),o=document.querySelector(".weather__num"),c=document.querySelector(".weather__symbol"),u=document.querySelector(".weather__text"),l=document.querySelectorAll(".weather__num_min"),d=document.querySelectorAll(".weather__symbol_min"),g=document.querySelectorAll(".weather__day"),h=document.querySelector(".error-message"),y=document.querySelector(".control-bar__change-bg"),m=document.querySelector(".control-bar__change-lang"),p=document.querySelector(".control-bar__change-scale"),S=document.querySelector(".search-bar__button");new class{init(e){new ymaps.Map("geolocation__map",{center:e,zoom:7})}};var M=class{static setBackground(e){n.style.backgroundImage=`linear-gradient(rgba(8, 15, 26, 0.5) 0%, rgba(17, 17, 46, 0.3) 100%), url(${e})`}static setDateTime(e,a){const t=e.getDay(),n=e.getDate(),r=e.getMonth(),i=void 0!==a&&void 0!==a.weather?e.toLocaleTimeString("ru-RU",{timeZone:a.weather.timezone}):e.toLocaleTimeString();s.innerHTML=`${a.getDayOfWeek(t)} ${n} ${a.getMonth(r)}, ${i}`}static parseGradesAndMinutes(e){return`${Math.floor(e)}°${Math.round(Math.abs(e)%1*60)}'`}static setWeather(e){const a=e.weather;y.innerHTML=e.objectsText.btnBg[e.languageIndex],m.innerHTML=e.objectsText.btnLang[e.languageIndex],p.innerHTML=e.scaleText.btnScale[e.scaleIndex],S.innerHTML=e.objectsText.btnSearch[e.languageIndex],r.innerText=`${a.cityLang}, ${a.countryLang}`,i.innerHTML=e.objectsText.Latitude[e.languageIndex]+": ",i.innerHTML+=""+this.parseGradesAndMinutes(a.latitude),i.innerHTML+=`<br>${e.objectsText.Longitude[e.languageIndex]}: `,i.innerHTML+=""+this.parseGradesAndMinutes(a.longitude),o.innerHTML=Math.round(a.weatherCurrent.temperature)+"°",c.setAttribute("src",`./assets/images/weather_icons/${a.weatherCurrent.icon}.png`),c.setAttribute("alt",""+a.weatherCurrent.description),u.innerHTML=a.weatherCurrent.description.toUpperCase()+"<br>",u.innerHTML+=e.objectsText.txtFeelLike[e.languageIndex].toUpperCase()+": ",u.innerHTML+=Math.round(a.weatherCurrent.apparentTemperature)+"°<br>",u.innerHTML+=e.objectsText.txtWind[e.languageIndex].toUpperCase()+": ",u.innerHTML+=""+Math.round(a.weatherCurrent.windSpeed),u.innerHTML+=` ${e.scaleText.speed[e.scaleIndex][e.languageIndex]}<br>`,u.innerHTML+=e.objectsText.txtHumidity[e.languageIndex].toUpperCase()+": ",u.innerHTML+=Math.round(a.weatherCurrent.humidity)+"%";for(let t=0;t<3;t+=1)l[t].innerHTML=Math.round(a.weatherArr[t].temperature)+"°",d[t].setAttribute("src",`./assets/images/weather_icons/${a.weatherArr[t].icon}.png`),d[t].setAttribute("alt",""+a.weatherArr[t].description),g[t].innerHTML=e.getDayOfWeek(a.weatherArr[t].dayOfWeek);const t=[a.latitude,a.longitude];this.map?this.map.setCenter(t):this.map=new ymaps.Map("map",{center:t,zoom:7})}static showError(e){h.innerHTML=""===e?"":"ОШИБКА: "+e.toString()}},b="EDydB9kDsKEPBW4oGDNZ0-pAoJd11MLpR7j4yfs0H1k",w="7e2fa980f3b886",T="f0cda0c38ef94aea81da290cf11c9aa7",L="trnsl.1.1.20200504T132038Z.bf5eb87463eca519.3f90f3f53499b37aae2a32866b33fa9a491cc65e",I=class{constructor(e,a){this.success=e,e?this.result=a:this.error=a}},A=class{constructor(e,a,t,n,r,i,s){this.dayOfWeek=e,this.temperature=a,this.icon=t,this.description=n,this.apparentTemperature=r,this.windSpeed=i,this.humidity=s}};const C={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russia",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"};const f=new class{constructor(e){this.url="https://api.unsplash.com/photos/random?orientation=landscape&per_page=1&query=nature&client_id="+e}async getImage(){try{const e=await fetch(this.url),a=await e.json();return new I(!0,a.urls.regular)}catch(e){return new I(!1,"Ошибка получения фона: "+e)}}}(b),x=new class{constructor(e){this.url="https://ipinfo.io/json?token="+e}async getLocation(){try{const e=await fetch(this.url);return(await e.json()).loc.split(",").map(e=>parseFloat(e))}catch(e){return console.log("Ошибка получения информации об IP: "+e),[55.75,37.62]}}}(w),B=new class{constructor(e){this.key=e}getCountryName(e){return C.hasOwnProperty(e)?C[e]:e}async getCurrent(e,a,t){const n=Array.isArray(t)?`https://api.weatherbit.io/v2.0/current/current?lat=${t[0]}&lon=${t[1]}&units=${e}&lang=${a}&key=${this.key}`:`https://api.weatherbit.io/v2.0/current/current?city=${t}&days=4&units=${e}&lang=${a}&key=${this.key}`,r=await fetch(n),i=(await r.json()).data[0],s=new Date(i.datetime).getDay(),o=new A(s,parseFloat(i.temp),i.weather.icon,i.weather.description,parseFloat(i.app_temp),parseFloat(i.wind_spd),parseFloat(i.rh)),c=this.getCountryName(i.country_code);return new class{constructor(e,a,t,n,r,i,s){this.latitude=e,this.longitude=a,this.timezone=t,this.city=n,this.country=r,this.weatherCurrent=i,this.weatherArr=s,this.cityLang=n,this.countryLang=r}}(parseFloat(i.lat),parseFloat(i.lon),i.timezone,i.city_name,c,o)}async getForecast(e,a,t){const n=Array.isArray(t)?`https://api.weatherbit.io/v2.0/forecast/daily?lat=${t[0]}&lon=${t[1]}&days=4&units=${e}&lang=${a}&key=${this.key}`:`https://api.weatherbit.io/v2.0/forecast/daily?city=${t}&days=4&units=${e}&lang=${a}&key=${this.key}`,r=await fetch(n),i=await r.json(),s=[];for(let e=1;e<4;e+=1){const a=i.data[e],t=new Date(a.datetime).getDay(),n=new A(t,parseFloat(a.temp),a.weather.icon);s.push(n)}return s}async getWeather(e,a,t){try{const n=this.getCurrent(e,a,t),r=this.getForecast(e,a,t),i=await Promise.all([n,r]);return i[0].weatherArr=i[1],new I(!0,i[0])}catch(e){return new I(!1,"Ошибка получения информации о погоде: "+e)}}}(T),G=new class{constructor(e){this.key=e}async getTranslate(e,a,t){const n=`https://translate.yandex.net/api/v1.5/tr.json/translate?key=${this.key}&text=${e}&lang=${a}-${t}`,r=await fetch(n);if(!r.ok)return new I(!1,r.error);const i=await r.json(),s=200===i.code&&Array.isArray(i.text)&&i.text.length>0;return new I(s,s?i.text[0]:"Error: "+i.code)}}(L),k=new class{constructor(){this.scaleIndex=parseInt(localStorage.scaleIndex,10),Number.isNaN(this.scaleIndex)&&(this.scaleIndex=0),this.languageIndex=parseInt(localStorage.languageIndex,10),Number.isNaN(this.languageIndex)&&(this.languageIndex=0),this.scales=["M","I"],this.languages=["en","ru","be"],this.daysOfWeek=[["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],["Нядзелю","Панядзелак","Аўторак","Серада","Чацвер","Пятніцу","Суботу"]],this.months=[["January","February","March","April","May","June","July","August","September","October","November","December"],["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],["Студзеня","Лютага","Сакавіка","Красавіка","Май","Чэрвеня","Ліпеня","Жніўня","Верасня","Кастрычніка","Лістапад","Снежні"]],this.scaleText={btnScale:["°C","°F"],speed:[["m/s","м/с","м/с"],["mph","миль/ч","міль/ч"]]},this.objectsText={btnBg:["BG","Фон","Фон"],btnLang:["En","Ru","BY"],btnSearch:["Search","Поиск","Пошук"],txtFeelLike:["Feel like","Ощущается","Адчуваецца"],txtWind:["Wind","Ветер","Вецер"],txtHumidity:["Humidity","Влажность","Вільготнасць"],Latitude:["Latitude","Широта","Шырата"],Longitude:["Longitude","Долгота","Даўгата"]}}changeScale(){this.scaleIndex=(this.scaleIndex+1)%this.scales.length,localStorage.setItem("scaleIndex",this.scaleIndex)}changeLanguage(){this.languageIndex=(this.languageIndex+1)%this.languages.length,localStorage.setItem("languageIndex",this.languageIndex)}getScale(){return this.scales[this.scaleIndex]}getLanguage(){return this.languages[this.languageIndex]}getDayOfWeek(e){return this.daysOfWeek[this.languageIndex][e]}getMonth(e){return this.months[this.languageIndex][e]}};var N=class{static getConfig(){return k}static getBackgroundImageUrl(){return f.getImage()}static async getWeatherResponse(e){if(!e){const e=void 0!==k.weather?[k.weather.latitude,k.weather.longitude]:await x.getLocation();return B.getWeather(k.getScale(),k.getLanguage(),e)}let a=e;if(/[А-Яа-яЁё]/i.test(a)){const e=await G.getTranslate(a,"ru","en");e.success&&(a=e.result)}return B.getWeather(k.getScale(),k.getLanguage(),a)}static async getWeather(e){const a=await this.getWeatherResponse(e);return a.success&&("en"!==k.getLanguage()?(a.result.cityLang=(await G.getTranslate(a.result.city,"en",k.getLanguage())).result,a.result.countryLang=(await G.getTranslate(a.result.country,"en",k.getLanguage())).result):(a.result.cityLang=a.result.city,a.result.countryLang=a.result.country),k.weather=a.result),a}static changeLanguage(){k.changeLanguage()}static changeScale(){k.changeScale()}};class _{static async changeBackground(){const e=await N.getBackgroundImageUrl();e.success?M.setBackground(e.result):(M.showError(e.error),M.setBackground("./assets/images/bg-default.jpg"))}static runTime(){function e(){const e=new Date;M.setDateTime(e,N.getConfig())}setInterval(e,1e3),e()}static async showWeather(e){M.showError("");const a=await N.getWeather(e);a.success?M.setWeather(N.getConfig()):M.showError(a.error)}static changeLanguage(){N.changeLanguage(),this.showWeather()}static changeScale(){N.changeScale(),this.showWeather()}}_.changeBackground(),_.showWeather(),_.runTime();const H=document.querySelector(".control-bar__change-bg"),E=document.querySelector(".search-bar__button"),P=document.querySelector(".search-bar__input"),F=document.querySelector(".control-bar__change-lang"),v=document.querySelector(".control-bar__change-scale");H.addEventListener("click",()=>{_.changeBackground()}),E.addEventListener("click",()=>{_.showWeather(P.value)}),document.addEventListener("keydown",e=>{13===e.keyCode&&_.showWeather(P.value)}),F.addEventListener("click",()=>{_.changeLanguage()}),v.addEventListener("click",()=>{_.changeScale()})}]);